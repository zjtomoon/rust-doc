window.search = {"resultsoptions":{"limit_results":30,"teaser_word_count":30},"searchoptions":{"bool":"OR","expand":true,"fields":{"body":{"boost":1},"breadcrumbs":{"boost":1},"title":{"boost":2}}},"index":{"fields":["title","body","breadcrumbs"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"8":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"8":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0}},"df":5}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":8}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.0}},"df":1}}}}},"b":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"appendix-00.html#appendix":{"tf":1.4142135623730951},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.4142135623730951},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951},"appendix-05-editions.html#appendix-e---editions":{"tf":1.4142135623730951},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.7320508075688772},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951},"ch00-00-introduction.html#introduction":{"tf":1.4142135623730951},"ch01-00-getting-started.html#getting-started":{"tf":1.4142135623730951},"ch01-01-installation.html#installation":{"tf":1.4142135623730951},"ch01-02-hello-world.html#hello-world":{"tf":1.4142135623730951},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.4142135623730951},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.4142135623730951},"ch03-02-data-types.html#data-types":{"tf":1.4142135623730951},"ch03-03-how-functions-work.html#functions":{"tf":1.4142135623730951},"ch03-04-comments.html#comments":{"tf":1.4142135623730951},"ch03-05-control-flow.html#control-flow":{"tf":1.4142135623730951},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.4142135623730951},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.4142135623730951},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.4142135623730951},"ch04-03-slices.html#the-slice-type":{"tf":1.4142135623730951},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.4142135623730951},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.4142135623730951},"ch05-03-method-syntax.html#method-syntax":{"tf":1.4142135623730951},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951},"ch08-00-common-collections.html#common-collections":{"tf":1.4142135623730951},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951},"ch09-00-error-handling.html#error-handling":{"tf":1.4142135623730951},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.4142135623730951},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.4142135623730951},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.4142135623730951},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.4142135623730951},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.4142135623730951},"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.4142135623730951},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.4142135623730951},"ch11-03-test-organization.html#test-organization":{"tf":1.4142135623730951},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.4142135623730951},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.4142135623730951},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.4142135623730951},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.4142135623730951},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.4142135623730951},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.4142135623730951},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.4142135623730951},"ch19-00-advanced-features.html#advanced-features":{"tf":1.4142135623730951},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.4142135623730951},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.4142135623730951},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.4142135623730951},"ch19-04-advanced-types.html#advanced-types":{"tf":1.4142135623730951},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.4142135623730951},"ch19-06-macros.html#macros":{"tf":1.4142135623730951},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951},"foreword.html#foreword":{"tf":1.4142135623730951}},"df":101}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0}},"df":4}}}}},"c":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":5}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch08-00-common-collections.html#common-collections":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch03-04-comments.html#comments":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0}},"df":5}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0}},"df":3}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":2}}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":1}}}},"d":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"ch03-02-data-types.html#data-types":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951}},"df":2}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.4142135623730951},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.4142135623730951},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951},"appendix-05-editions.html#appendix-e---editions":{"tf":1.4142135623730951},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.4142135623730951},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951},"ch00-00-introduction.html#introduction":{"tf":1.4142135623730951},"ch01-00-getting-started.html#getting-started":{"tf":1.4142135623730951},"ch01-01-installation.html#installation":{"tf":1.4142135623730951},"ch01-02-hello-world.html#hello-world":{"tf":1.4142135623730951},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.4142135623730951},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.4142135623730951},"ch03-02-data-types.html#data-types":{"tf":1.4142135623730951},"ch03-03-how-functions-work.html#functions":{"tf":1.4142135623730951},"ch03-04-comments.html#comments":{"tf":1.4142135623730951},"ch03-05-control-flow.html#control-flow":{"tf":1.4142135623730951},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.4142135623730951},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.4142135623730951},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.4142135623730951},"ch04-03-slices.html#the-slice-type":{"tf":1.4142135623730951},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.4142135623730951},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.4142135623730951},"ch05-03-method-syntax.html#method-syntax":{"tf":1.4142135623730951},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951},"ch08-00-common-collections.html#common-collections":{"tf":1.4142135623730951},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951},"ch09-00-error-handling.html#error-handling":{"tf":1.4142135623730951},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.4142135623730951},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.4142135623730951},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.4142135623730951},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.4142135623730951},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.4142135623730951},"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.4142135623730951},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.4142135623730951},"ch11-03-test-organization.html#test-organization":{"tf":1.4142135623730951},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.4142135623730951},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.4142135623730951},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.4142135623730951},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.4142135623730951},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.4142135623730951},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.4142135623730951},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.4142135623730951},"ch19-00-advanced-features.html#advanced-features":{"tf":1.4142135623730951},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.4142135623730951},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.4142135623730951},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.4142135623730951},"ch19-04-advanced-types.html#advanced-types":{"tf":1.4142135623730951},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.4142135623730951},"ch19-06-macros.html#macros":{"tf":1.4142135623730951},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951},"foreword.html#foreword":{"tf":1.4142135623730951}},"df":101}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0}},"df":1}}}},"e":{"docs":{"appendix-05-editions.html#appendix-e---editions":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.4142135623730951},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951}},"df":5}}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":1},"s":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0}},"df":1}},"d":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"foreword.html#foreword":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0}},"df":5}}}}}}}},"g":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0}},"df":2}}},"t":{"docs":{"ch01-00-getting-started.html#getting-started":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"h":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"ch01-01-installation.html#installation":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951}},"df":2},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch00-00-introduction.html#introduction":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0}},"df":1},"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":3}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"’":{"docs":{"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0}},"df":2},"k":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"s":{"docs":{},"df":0,"t":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"o":{"docs":{},"df":0,"p":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"ch19-06-macros.html#macros":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":1}},"p":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"ch05-03-method-syntax.html#method-syntax":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":2}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":4}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"ch11-03-test-organization.html#test-organization":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":3}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0}},"df":2}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.4142135623730951}},"df":2}}},"s":{"docs":{},"df":0,"s":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":7}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":3}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0}},"df":5}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":5}},"u":{"docs":{},"df":0,"t":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.7320508075688772},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.4142135623730951},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101,"'":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"n":{"docs":{},"df":0,"d":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951}},"df":3}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch04-03-slices.html#the-slice-type":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"ch01-00-getting-started.html#getting-started":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0}},"df":3,"u":{"docs":{},"df":0,"r":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0}},"df":5}},"x":{"docs":{},"df":0,"t":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":4}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0}},"df":8}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"ch03-02-data-types.html#data-types":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0}},"df":6}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0}},"df":1}}}},"s":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0}},"df":8},"t":{"docs":{},"df":0,"f":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0}},"df":1}},"u":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"s":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}},"e":{"docs":{},"df":0,"b":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"ch01-02-hello-world.html#hello-world":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0}},"df":3}}}}}}},"breadcrumbs":{"root":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"8":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"8":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.4142135623730951}},"df":1}}}}},"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"ch19-00-advanced-features.html#advanced-features":{"tf":1.4142135623730951},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.7320508075688772},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.7320508075688772},"ch19-04-advanced-types.html#advanced-types":{"tf":1.7320508075688772},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.7320508075688772},"ch19-06-macros.html#macros":{"tf":1.0}},"df":7}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"appendix-00.html#appendix":{"tf":1.4142135623730951},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.7320508075688772},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.7320508075688772},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.7320508075688772},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.7320508075688772},"appendix-05-editions.html#appendix-e---editions":{"tf":1.7320508075688772},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.7320508075688772},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.7320508075688772}},"df":8}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951}},"df":1}}}}},"b":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951}},"df":1}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"appendix-00.html#appendix":{"tf":1.4142135623730951},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.4142135623730951},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951},"appendix-05-editions.html#appendix-e---editions":{"tf":1.4142135623730951},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":2.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951},"ch00-00-introduction.html#introduction":{"tf":1.4142135623730951},"ch01-00-getting-started.html#getting-started":{"tf":1.4142135623730951},"ch01-01-installation.html#installation":{"tf":1.4142135623730951},"ch01-02-hello-world.html#hello-world":{"tf":1.4142135623730951},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.4142135623730951},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.4142135623730951},"ch03-02-data-types.html#data-types":{"tf":1.4142135623730951},"ch03-03-how-functions-work.html#functions":{"tf":1.4142135623730951},"ch03-04-comments.html#comments":{"tf":1.4142135623730951},"ch03-05-control-flow.html#control-flow":{"tf":1.4142135623730951},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.4142135623730951},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.4142135623730951},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.4142135623730951},"ch04-03-slices.html#the-slice-type":{"tf":1.4142135623730951},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.4142135623730951},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.4142135623730951},"ch05-03-method-syntax.html#method-syntax":{"tf":1.4142135623730951},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951},"ch08-00-common-collections.html#common-collections":{"tf":1.4142135623730951},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951},"ch09-00-error-handling.html#error-handling":{"tf":1.4142135623730951},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.4142135623730951},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.4142135623730951},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.4142135623730951},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.4142135623730951},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.4142135623730951},"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.4142135623730951},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.4142135623730951},"ch11-03-test-organization.html#test-organization":{"tf":1.4142135623730951},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.4142135623730951},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.4142135623730951},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.4142135623730951},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.4142135623730951},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.4142135623730951},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.4142135623730951},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.4142135623730951},"ch19-00-advanced-features.html#advanced-features":{"tf":1.4142135623730951},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.4142135623730951},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.4142135623730951},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.4142135623730951},"ch19-04-advanced-types.html#advanced-types":{"tf":1.4142135623730951},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.4142135623730951},"ch19-06-macros.html#macros":{"tf":1.4142135623730951},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951},"foreword.html#foreword":{"tf":1.4142135623730951}},"df":101}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.4142135623730951}},"df":1}}}},"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.7320508075688772},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":12}}}}},"c":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.4142135623730951},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.7320508075688772},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.7320508075688772},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.7320508075688772}},"df":7}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951}},"df":2}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.7320508075688772},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.4142135623730951}},"df":6}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch08-00-common-collections.html#common-collections":{"tf":1.4142135623730951},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":4}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.7320508075688772},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951}},"df":8}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch03-04-comments.html#comments":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.4142135623730951},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":10}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0}},"df":6}}},"i":{"docs":{},"df":0,"s":{"docs":{"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.7320508075688772},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.7320508075688772}},"df":5}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"ch03-05-control-flow.html#control-flow":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.4142135623730951}},"df":5}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.7320508075688772},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.4142135623730951}},"df":4,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.7320508075688772},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.7320508075688772},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":6}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951}},"df":2}}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951}},"df":1}}}},"d":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"ch03-02-data-types.html#data-types":{"tf":1.4142135623730951},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951}},"df":8}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.4142135623730951},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":2.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.4142135623730951},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.4142135623730951},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951},"appendix-05-editions.html#appendix-e---editions":{"tf":1.4142135623730951},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.4142135623730951},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951},"ch00-00-introduction.html#introduction":{"tf":1.4142135623730951},"ch01-00-getting-started.html#getting-started":{"tf":1.4142135623730951},"ch01-01-installation.html#installation":{"tf":1.4142135623730951},"ch01-02-hello-world.html#hello-world":{"tf":1.4142135623730951},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.4142135623730951},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.4142135623730951},"ch03-02-data-types.html#data-types":{"tf":1.4142135623730951},"ch03-03-how-functions-work.html#functions":{"tf":1.4142135623730951},"ch03-04-comments.html#comments":{"tf":1.4142135623730951},"ch03-05-control-flow.html#control-flow":{"tf":1.4142135623730951},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.4142135623730951},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.4142135623730951},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.4142135623730951},"ch04-03-slices.html#the-slice-type":{"tf":1.4142135623730951},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.4142135623730951},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.4142135623730951},"ch05-03-method-syntax.html#method-syntax":{"tf":1.4142135623730951},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951},"ch08-00-common-collections.html#common-collections":{"tf":1.4142135623730951},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951},"ch09-00-error-handling.html#error-handling":{"tf":1.4142135623730951},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.4142135623730951},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.4142135623730951},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.4142135623730951},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.4142135623730951},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.4142135623730951},"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.4142135623730951},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.4142135623730951},"ch11-03-test-organization.html#test-organization":{"tf":1.4142135623730951},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.4142135623730951},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.4142135623730951},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.4142135623730951},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.4142135623730951},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.4142135623730951},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.4142135623730951},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.4142135623730951},"ch19-00-advanced-features.html#advanced-features":{"tf":1.4142135623730951},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.4142135623730951},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.4142135623730951},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.4142135623730951},"ch19-04-advanced-types.html#advanced-types":{"tf":1.4142135623730951},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.4142135623730951},"ch19-06-macros.html#macros":{"tf":1.4142135623730951},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951},"foreword.html#foreword":{"tf":1.4142135623730951}},"df":101}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{"appendix-05-editions.html#appendix-e---editions":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.7320508075688772},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.7320508075688772},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0}},"df":4}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.4142135623730951}},"df":2}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch09-00-error-handling.html#error-handling":{"tf":1.4142135623730951},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.7320508075688772},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.7320508075688772},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":2.0}},"df":6}}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951}},"df":1}}}}}},"f":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":5}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.4142135623730951},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0}},"df":16}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":4}},"d":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch03-05-control-flow.html#control-flow":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.4142135623730951}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"foreword.html#foreword":{"tf":1.4142135623730951}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"ch03-03-how-functions-work.html#functions":{"tf":1.4142135623730951},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.7320508075688772},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.4142135623730951}},"df":8}}}}}}}},"g":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.7320508075688772},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0}},"df":4}}},"t":{"docs":{"ch01-00-getting-started.html#getting-started":{"tf":1.4142135623730951},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"ch09-00-error-handling.html#error-handling":{"tf":1.4142135623730951},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951}},"df":5}}},"s":{"docs":{},"df":0,"h":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"ch01-02-hello-world.html#hello-world":{"tf":1.4142135623730951},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951}},"df":8}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951}},"df":2}}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"ch01-01-installation.html#installation":{"tf":1.4142135623730951},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":2.0}},"df":2},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.7320508075688772},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch00-00-introduction.html#introduction":{"tf":1.4142135623730951}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.7320508075688772},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.7320508075688772}},"df":5}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.4142135623730951}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.4142135623730951},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951}},"df":6}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951}},"df":1},"y":{"docs":{},"df":0,"’":{"docs":{"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.7320508075688772},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.4142135623730951}},"df":5}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.7320508075688772},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0}},"df":7},"k":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"s":{"docs":{},"df":0,"t":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"o":{"docs":{},"df":0,"p":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"ch19-06-macros.html#macros":{"tf":1.4142135623730951}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951}},"df":1},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.7320508075688772},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.7320508075688772},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":8}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951}},"df":2}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"ch05-03-method-syntax.html#method-syntax":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.7320508075688772}},"df":3,"a":{"docs":{},"df":0,"r":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.4142135623730951},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":6}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.7320508075688772},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":4}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.4142135623730951},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951}},"df":2}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951}},"df":1}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.7320508075688772},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.7320508075688772},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.7320508075688772}},"df":4}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"ch11-03-test-organization.html#test-organization":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.7320508075688772},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.7320508075688772}},"df":4}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951}},"df":1}}}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.4142135623730951},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.7320508075688772},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0}},"df":4}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.4142135623730951},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.7320508075688772},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.4142135623730951},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":2.0}},"df":2}}},"s":{"docs":{},"df":0,"s":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.4142135623730951},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.7320508075688772},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.7320508075688772},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.7320508075688772}},"df":10}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.7320508075688772},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.7320508075688772},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":7}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.4142135623730951},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.4142135623730951},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.4142135623730951},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.4142135623730951},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":19}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.4142135623730951},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.4142135623730951},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":12}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.4142135623730951}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.4142135623730951}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.4142135623730951}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.4142135623730951},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.4142135623730951},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.4142135623730951},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.4142135623730951}},"df":5}},"u":{"docs":{},"df":0,"t":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.4142135623730951},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":2.23606797749979},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.7320508075688772},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.4142135623730951},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.7320508075688772},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101,"'":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}},"n":{"docs":{},"df":0,"d":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.4142135623730951}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.7320508075688772},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":2.23606797749979},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":4}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.4142135623730951},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.4142135623730951}},"df":2}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951}},"df":1}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch04-03-slices.html#the-slice-type":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.4142135623730951},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.7320508075688772},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.7320508075688772},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":7}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":2.0}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"ch01-00-getting-started.html#getting-started":{"tf":1.4142135623730951},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"e":{"docs":{"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951}},"df":3}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.7320508075688772},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.7320508075688772},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0}},"df":4,"u":{"docs":{},"df":0,"r":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":7}}}}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"ch05-03-method-syntax.html#method-syntax":{"tf":1.4142135623730951},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.4142135623730951}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.4142135623730951}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.7320508075688772},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.7320508075688772},"ch11-03-test-organization.html#test-organization":{"tf":1.7320508075688772},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951}},"df":5}},"x":{"docs":{},"df":0,"t":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951}},"df":1}}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.4142135623730951},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951}},"df":4}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.4142135623730951},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.7320508075688772},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.4142135623730951},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.4142135623730951}},"df":10}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951}},"df":1}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"ch03-02-data-types.html#data-types":{"tf":1.4142135623730951},"ch04-03-slices.html#the-slice-type":{"tf":1.4142135623730951},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.4142135623730951},"ch10-01-syntax.html#generic-data-types":{"tf":1.7320508075688772},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch19-04-advanced-types.html#advanced-types":{"tf":1.4142135623730951}},"df":8}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.4142135623730951},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0}},"df":4}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.4142135623730951}},"df":1}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.4142135623730951},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.4142135623730951},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.7320508075688772},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.4142135623730951},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.4142135623730951},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.4142135623730951}},"df":10},"t":{"docs":{},"df":0,"f":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.4142135623730951}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.4142135623730951},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.4142135623730951},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":6}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.4142135623730951},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951}},"df":2}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}},"s":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.4142135623730951}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0},"foreword.html#foreword":{"tf":1.0}},"df":101}}},"e":{"docs":{},"df":0,"b":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0},"ch00-00-introduction.html#introduction":{"tf":1.0},"ch01-00-getting-started.html#getting-started":{"tf":1.0},"ch01-01-installation.html#installation":{"tf":1.0},"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch03-02-data-types.html#data-types":{"tf":1.0},"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch03-04-comments.html#comments":{"tf":1.0},"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0},"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0},"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0},"ch19-06-macros.html#macros":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.7320508075688772},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":2.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.4142135623730951},"foreword.html#foreword":{"tf":1.0}},"df":101}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.4142135623730951}},"df":1,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"ch01-02-hello-world.html#hello-world":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.4142135623730951},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.4142135623730951},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951}},"df":3}}}}}}},"title":{"root":{"docs":{},"df":0,"8":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"ch19-00-advanced-features.html#advanced-features":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0}},"df":5}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"appendix-00.html#appendix":{"tf":1.0},"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"appendix-05-editions.html#appendix-e---editions":{"tf":1.0},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":8}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.0}},"df":1}}}}},"b":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0}},"df":4}}}}},"c":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":5}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch08-00-common-collections.html#common-collections":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch03-04-comments.html#comments":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch08-00-common-collections.html#common-collections":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0}},"df":5}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0}},"df":3,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.0}},"df":3}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":2}}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":1}}}},"d":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"ch03-02-data-types.html#data-types":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.4142135623730951}},"df":2}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0}},"df":1}}}},"e":{"docs":{"appendix-05-editions.html#appendix-e---editions":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix-05-editions.html#appendix-e---editions":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-01-defining-an-enum.html#defining-an-enum":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951}},"df":5}}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"tf":1.0}},"df":1},"s":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch16-00-concurrency.html#fearless-concurrency":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch19-00-advanced-features.html#advanced-features":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"ch03-05-control-flow.html#control-flow":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"foreword.html#foreword":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"ch03-03-how-functions-work.html#functions":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"tf":1.0},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"tf":1.0}},"df":5}}}}}}}},"g":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0}},"df":2}}},"t":{"docs":{"ch01-00-getting-started.html#getting-started":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"ch09-00-error-handling.html#error-handling":{"tf":1.0},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"h":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"ch01-02-hello-world.html#hello-world":{"tf":1.0},"ch01-03-hello-cargo.html#hello-cargo":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"ch01-01-installation.html#installation":{"tf":1.0},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"tf":1.4142135623730951}},"df":2},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch00-00-introduction.html#introduction":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0}},"df":1},"r":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":3}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"appendix-01-keywords.html#appendix-a-keywords":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"’":{"docs":{"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"ch19-06-macros.html#macros":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":1}},"p":{"docs":{"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"ch05-03-method-syntax.html#method-syntax":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":2}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":4}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0},"ch06-02-match.html#the--match--control-flow-operator":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"ch11-03-test-organization.html#test-organization":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0}},"df":3}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0},"ch04-01-what-is-ownership.html#what-is-ownership":{"tf":1.0}},"df":2}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"tf":1.0},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"tf":1.4142135623730951}},"df":2}}},"s":{"docs":{},"df":0,"s":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"ch06-00-enums.html#enums-and-pattern-matching":{"tf":1.0},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"tf":1.0},"ch18-00-patterns.html#patterns-and-matching":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":7}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":3}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"tf":1.0},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0}},"df":5}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"tf":1.0},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"tf":1.0},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch12-02-reading-a-file.html#reading-a-file":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"<":{"docs":{},"df":0,"t":{"docs":{"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"ch04-02-references-and-borrowing.html#references-and-borrowing":{"tf":1.0},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"tf":1.0}},"df":5}},"u":{"docs":{},"df":0,"t":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"tf":1.4142135623730951},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"tf":1.0},"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.4142135623730951}},"df":3}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"ch04-03-slices.html#the-slice-type":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"ch15-00-smart-pointers.html#smart-pointers":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"ch01-00-getting-started.html#getting-started":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{"ch16-03-shared-state.html#shared-state-concurrency":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0}},"df":3,"u":{"docs":{},"df":0,"r":{"docs":{"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix-02-operators.html#appendix-b-operators-and-symbols":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"ch05-03-method-syntax.html#method-syntax":{"tf":1.0},"ch18-03-pattern-syntax.html#pattern-syntax":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"tf":1.0},"ch11-03-test-organization.html#test-organization":{"tf":1.0},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"tf":1.0}},"df":5}},"x":{"docs":{},"df":0,"t":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":4}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-02-traits.html#traits-defining-shared-behavior":{"tf":1.0},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"tf":1.0},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch19-03-advanced-traits.html#advanced-traits":{"tf":1.0}},"df":8}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"appendix-06-translation.html#appendix-f-translations-of-the-book":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"ch03-02-data-types.html#data-types":{"tf":1.0},"ch04-03-slices.html#the-slice-type":{"tf":1.0},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"tf":1.0},"ch10-01-syntax.html#generic-data-types":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch19-04-advanced-types.html#advanced-types":{"tf":1.0}},"df":6}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"ch04-00-understanding-ownership.html#understanding-ownership":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"ch19-01-unsafe-rust.html#unsafe-rust":{"tf":1.0}},"df":1}}}},"s":{"docs":{"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"tf":1.0},"ch05-00-structs.html#using-structs-to-structure-related-data":{"tf":1.0},"ch05-02-example-structs.html#an-example-program-using-structs":{"tf":1.0},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"tf":1.0},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"tf":1.0},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"tf":1.0}},"df":8},"t":{"docs":{},"df":0,"f":{"docs":{"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"tf":1.0}},"df":1}},"u":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"tf":1.0},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"ch03-01-variables-and-mutability.html#variables-and-mutability":{"tf":1.0},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"tf":1.0},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"tf":1.0}},"df":2}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"ch14-03-cargo-workspaces.html#cargo-workspaces":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"ch01-02-hello-world.html#hello-world":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"ch11-00-testing.html#writing-automated-tests":{"tf":1.0},"ch11-01-writing-tests.html#how-to-write-tests":{"tf":1.0},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"tf":1.0}},"df":3}}}}}}}},"documentStore":{"save":true,"docs":{"appendix-00.html#appendix":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix","id":"appendix-00.html#appendix","title":"Appendix"},"appendix-01-keywords.html#appendix-a-keywords":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix A: Keywords","id":"appendix-01-keywords.html#appendix-a-keywords","title":"Appendix A: Keywords"},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix B: Operators and Symbols","id":"appendix-02-operators.html#appendix-b-operators-and-symbols","title":"Appendix B: Operators and Symbols"},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix C: Derivable Traits","id":"appendix-03-derivable-traits.html#appendix-c-derivable-traits","title":"Appendix C: Derivable Traits"},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix D - Useful Development Tools","id":"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools","title":"Appendix D - Useful Development Tools"},"appendix-05-editions.html#appendix-e---editions":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix E - Editions","id":"appendix-05-editions.html#appendix-e---editions","title":"Appendix E - Editions"},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix F: Translations of the Book","id":"appendix-06-translation.html#appendix-f-translations-of-the-book","title":"Appendix F: Translations of the Book"},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Appendix » Appendix G - How Rust is Made and “Nightly Rust”","id":"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust","title":"Appendix G - How Rust is Made and “Nightly Rust”"},"ch00-00-introduction.html#introduction":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Introduction","id":"ch00-00-introduction.html#introduction","title":"Introduction"},"ch01-00-getting-started.html#getting-started":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Getting Started","id":"ch01-00-getting-started.html#getting-started","title":"Getting Started"},"ch01-01-installation.html#installation":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Getting Started » Installation","id":"ch01-01-installation.html#installation","title":"Installation"},"ch01-02-hello-world.html#hello-world":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Getting Started » Hello, World!","id":"ch01-02-hello-world.html#hello-world","title":"Hello, World!"},"ch01-03-hello-cargo.html#hello-cargo":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Getting Started » Hello, Cargo!","id":"ch01-03-hello-cargo.html#hello-cargo","title":"Hello, Cargo!"},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Programming a Guessing Game","id":"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game","title":"Programming a Guessing Game"},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Programming Concepts","id":"ch03-00-common-programming-concepts.html#common-programming-concepts","title":"Common Programming Concepts"},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Programming Concepts » Variables and Mutability","id":"ch03-01-variables-and-mutability.html#variables-and-mutability","title":"Variables and Mutability"},"ch03-02-data-types.html#data-types":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Programming Concepts » Data Types","id":"ch03-02-data-types.html#data-types","title":"Data Types"},"ch03-03-how-functions-work.html#functions":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Programming Concepts » Functions","id":"ch03-03-how-functions-work.html#functions","title":"Functions"},"ch03-04-comments.html#comments":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Programming Concepts » Comments","id":"ch03-04-comments.html#comments","title":"Comments"},"ch03-05-control-flow.html#control-flow":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Programming Concepts » Control Flow","id":"ch03-05-control-flow.html#control-flow","title":"Control Flow"},"ch04-00-understanding-ownership.html#understanding-ownership":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Understanding Ownership","id":"ch04-00-understanding-ownership.html#understanding-ownership","title":"Understanding Ownership"},"ch04-01-what-is-ownership.html#what-is-ownership":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Understanding Ownership » What Is Ownership?","id":"ch04-01-what-is-ownership.html#what-is-ownership","title":"What Is Ownership?"},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Understanding Ownership » References and Borrowing","id":"ch04-02-references-and-borrowing.html#references-and-borrowing","title":"References and Borrowing"},"ch04-03-slices.html#the-slice-type":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Understanding Ownership » The Slice Type","id":"ch04-03-slices.html#the-slice-type","title":"The Slice Type"},"ch05-00-structs.html#using-structs-to-structure-related-data":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Using Structs to Structure Related Data","id":"ch05-00-structs.html#using-structs-to-structure-related-data","title":"Using Structs to Structure Related Data"},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Using Structs to Structure Related Data » Defining and Instantiating Structs","id":"ch05-01-defining-structs.html#defining-and-instantiating-structs","title":"Defining and Instantiating Structs"},"ch05-02-example-structs.html#an-example-program-using-structs":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Using Structs to Structure Related Data » An Example Program Using Structs","id":"ch05-02-example-structs.html#an-example-program-using-structs","title":"An Example Program Using Structs"},"ch05-03-method-syntax.html#method-syntax":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Using Structs to Structure Related Data » Method Syntax","id":"ch05-03-method-syntax.html#method-syntax","title":"Method Syntax"},"ch06-00-enums.html#enums-and-pattern-matching":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Enums and Pattern Matching","id":"ch06-00-enums.html#enums-and-pattern-matching","title":"Enums and Pattern Matching"},"ch06-01-defining-an-enum.html#defining-an-enum":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Enums and Pattern Matching » Defining an Enum","id":"ch06-01-defining-an-enum.html#defining-an-enum","title":"Defining an Enum"},"ch06-02-match.html#the--match--control-flow-operator":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Enums and Pattern Matching » The match Control Flow Operator","id":"ch06-02-match.html#the--match--control-flow-operator","title":"The match Control Flow Operator"},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Enums and Pattern Matching » Concise Control Flow with if let","id":"ch06-03-if-let.html#concise-control-flow-with--if-let","title":"Concise Control Flow with if let"},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Packages, Crates, and Modules","id":"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules","title":"Packages, Crates, and Modules"},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Packages, Crates, and Modules » Packages and Crates for Making Libraries and Executables","id":"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables","title":"Packages and Crates for Making Libraries and Executables"},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Packages, Crates, and Modules » The Module System to Control Scope and Privacy","id":"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy","title":"The Module System to Control Scope and Privacy"},"ch08-00-common-collections.html#common-collections":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Collections","id":"ch08-00-common-collections.html#common-collections","title":"Common Collections"},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Collections » Storing Lists of Values with Vectors","id":"ch08-01-vectors.html#storing-lists-of-values-with-vectors","title":"Storing Lists of Values with Vectors"},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Collections » Storing UTF-8 Encoded Text with Strings","id":"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings","title":"Storing UTF-8 Encoded Text with Strings"},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Common Collections » Storing Keys with Associated Values in Hash Maps","id":"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps","title":"Storing Keys with Associated Values in Hash Maps"},"ch09-00-error-handling.html#error-handling":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Error Handling","id":"ch09-00-error-handling.html#error-handling","title":"Error Handling"},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Error Handling » Unrecoverable Errors with panic!","id":"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic","title":"Unrecoverable Errors with panic!"},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Error Handling » Recoverable Errors with Result","id":"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result","title":"Recoverable Errors with Result"},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Error Handling » To panic! or Not to panic!","id":"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic","title":"To panic! or Not to panic!"},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Generic Types, Traits, and Lifetimes","id":"ch10-00-generics.html#generic-types-traits-and-lifetimes","title":"Generic Types, Traits, and Lifetimes"},"ch10-01-syntax.html#generic-data-types":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Generic Types, Traits, and Lifetimes » Generic Data Types","id":"ch10-01-syntax.html#generic-data-types","title":"Generic Data Types"},"ch10-02-traits.html#traits-defining-shared-behavior":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Generic Types, Traits, and Lifetimes » Traits: Defining Shared Behavior","id":"ch10-02-traits.html#traits-defining-shared-behavior","title":"Traits: Defining Shared Behavior"},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Generic Types, Traits, and Lifetimes » Validating References with Lifetimes","id":"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes","title":"Validating References with Lifetimes"},"ch11-00-testing.html#writing-automated-tests":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Writing Automated Tests","id":"ch11-00-testing.html#writing-automated-tests","title":"Writing Automated Tests"},"ch11-01-writing-tests.html#how-to-write-tests":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Testing » How to Write Tests","id":"ch11-01-writing-tests.html#how-to-write-tests","title":"How to Write Tests"},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Testing » Controlling How Tests Are Run","id":"ch11-02-running-tests.html#controlling-how-tests-are-run","title":"Controlling How Tests Are Run"},"ch11-03-test-organization.html#test-organization":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Testing » Test Organization","id":"ch11-03-test-organization.html#test-organization","title":"Test Organization"},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program","id":"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program","title":"An I/O Project: Building a Command Line Program"},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program » Accepting Command Line Arguments","id":"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments","title":"Accepting Command Line Arguments"},"ch12-02-reading-a-file.html#reading-a-file":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program » Reading a File","id":"ch12-02-reading-a-file.html#reading-a-file","title":"Reading a File"},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program » Refactoring to Improve Modularity and Error Handling","id":"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling","title":"Refactoring to Improve Modularity and Error Handling"},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program » Developing the Library’s Functionality with Test-Driven Development","id":"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development","title":"Developing the Library’s Functionality with Test-Driven Development"},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program » Working with Environment Variables","id":"ch12-05-working-with-environment-variables.html#working-with-environment-variables","title":"Working with Environment Variables"},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"An I/O Project: Building a Command Line Program » Writing Error Messages to Standard Error Instead of Standard Output","id":"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output","title":"Writing Error Messages to Standard Error Instead of Standard Output"},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Functional Language Features: Iterators and Closures","id":"ch13-00-functional-features.html#functional-language-features-iterators-and-closures","title":"Functional Language Features: Iterators and Closures"},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Functional Language Features: Iterators and Closures » Closures: Anonymous Functions that Can Capture Their Environment","id":"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment","title":"Closures: Anonymous Functions that Can Capture Their Environment"},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Functional Language Features: Iterators and Closures » Processing a Series of Items with Iterators","id":"ch13-02-iterators.html#processing-a-series-of-items-with-iterators","title":"Processing a Series of Items with Iterators"},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Functional Language Features: Iterators and Closures » Improving Our I/O Project","id":"ch13-03-improving-our-io-project.html#improving-our-io-project","title":"Improving Our I/O Project"},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Functional Language Features: Iterators and Closures » Comparing Performance: Loops vs. Iterators","id":"ch13-04-performance.html#comparing-performance-loops-vs-iterators","title":"Comparing Performance: Loops vs. Iterators"},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"More About Cargo and Crates.io","id":"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio","title":"More About Cargo and Crates.io"},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"More about Cargo and Crates.io » Customizing Builds with Release Profiles","id":"ch14-01-release-profiles.html#customizing-builds-with-release-profiles","title":"Customizing Builds with Release Profiles"},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"More about Cargo and Crates.io » Publishing a Crate to Crates.io","id":"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio","title":"Publishing a Crate to Crates.io"},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"More about Cargo and Crates.io » Cargo Workspaces","id":"ch14-03-cargo-workspaces.html#cargo-workspaces","title":"Cargo Workspaces"},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"More about Cargo and Crates.io » Installing Binaries from Crates.io with cargo install","id":"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install","title":"Installing Binaries from Crates.io with cargo install"},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"More about Cargo and Crates.io » Extending Cargo with Custom Commands","id":"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands","title":"Extending Cargo with Custom Commands"},"ch15-00-smart-pointers.html#smart-pointers":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers","id":"ch15-00-smart-pointers.html#smart-pointers","title":"Smart Pointers"},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers » Using Box<T> to Point to Data on the Heap","id":"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap","title":"Using Box<T> to Point to Data on the Heap"},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers » Treating Smart Pointers Like Regular References with the Deref Trait","id":"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait","title":"Treating Smart Pointers Like Regular References with the Deref Trait"},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers » Running Code on Cleanup with the Drop Trait","id":"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait","title":"Running Code on Cleanup with the Drop Trait"},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers » Rc<T> , the Reference Counted Smart Pointer","id":"ch15-04-rc.html#rct--the-reference-counted-smart-pointer","title":"Rc<T> , the Reference Counted Smart Pointer"},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers » RefCell<T> and the Interior Mutability Pattern","id":"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern","title":"RefCell<T> and the Interior Mutability Pattern"},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Smart Pointers » Reference Cycles Can Leak Memory","id":"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory","title":"Reference Cycles Can Leak Memory"},"ch16-00-concurrency.html#fearless-concurrency":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Fearless Concurrency","id":"ch16-00-concurrency.html#fearless-concurrency","title":"Fearless Concurrency"},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Fearless Concurrency » Using Threads to Run Code Simultaneously","id":"ch16-01-threads.html#using-threads-to-run-code-simultaneously","title":"Using Threads to Run Code Simultaneously"},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Fearless Concurrency » Using Message Passing to Transfer Data Between Threads","id":"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads","title":"Using Message Passing to Transfer Data Between Threads"},"ch16-03-shared-state.html#shared-state-concurrency":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Fearless Concurrency » Shared-State Concurrency","id":"ch16-03-shared-state.html#shared-state-concurrency","title":"Shared-State Concurrency"},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Fearless Concurrency » Extensible Concurrency with the Sync and Send Traits","id":"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits","title":"Extensible Concurrency with the Sync and Send Traits"},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Object Oriented Programming Features of Rust","id":"ch17-00-oop.html#object-oriented-programming-features-of-rust","title":"Object Oriented Programming Features of Rust"},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Object Oriented Programming Features of Rust » Characteristics of Object-Oriented Languages","id":"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages","title":"Characteristics of Object-Oriented Languages"},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Object Oriented Programming Features of Rust » Using Trait Objects that Allow for Values of Different Types","id":"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types","title":"Using Trait Objects that Allow for Values of Different Types"},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Object Oriented Programming Features of Rust » Implementing an Object-Oriented Design Pattern","id":"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern","title":"Implementing an Object-Oriented Design Pattern"},"ch18-00-patterns.html#patterns-and-matching":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Patterns and Matching","id":"ch18-00-patterns.html#patterns-and-matching","title":"Patterns and Matching"},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Patterns Match the Structure of Values » All the Places Patterns Can Be Used","id":"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used","title":"All the Places Patterns Can Be Used"},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Patterns Match the Structure of Values » Refutability: Whether a Pattern Might Fail to Match","id":"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match","title":"Refutability: Whether a Pattern Might Fail to Match"},"ch18-03-pattern-syntax.html#pattern-syntax":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Patterns Match the Structure of Values » Pattern Syntax","id":"ch18-03-pattern-syntax.html#pattern-syntax","title":"Pattern Syntax"},"ch19-00-advanced-features.html#advanced-features":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features","id":"ch19-00-advanced-features.html#advanced-features","title":"Advanced Features"},"ch19-01-unsafe-rust.html#unsafe-rust":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features » Unsafe Rust","id":"ch19-01-unsafe-rust.html#unsafe-rust","title":"Unsafe Rust"},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features » Advanced Lifetimes","id":"ch19-02-advanced-lifetimes.html#advanced-lifetimes","title":"Advanced Lifetimes"},"ch19-03-advanced-traits.html#advanced-traits":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features » Advanced Traits","id":"ch19-03-advanced-traits.html#advanced-traits","title":"Advanced Traits"},"ch19-04-advanced-types.html#advanced-types":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features » Advanced Types","id":"ch19-04-advanced-types.html#advanced-types","title":"Advanced Types"},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features » Advanced Functions and Closures","id":"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures","title":"Advanced Functions and Closures"},"ch19-06-macros.html#macros":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Advanced Features » Macros","id":"ch19-06-macros.html#macros","title":"Macros"},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Final Project: Building a Multithreaded Web Server","id":"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server","title":"Final Project: Building a Multithreaded Web Server"},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Final Project: Building a Multithreaded Web Server » Building a Single-Threaded Web Server","id":"ch20-01-single-threaded.html#building-a-single-threaded-web-server","title":"Building a Single-Threaded Web Server"},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Final Project: Building a Multithreaded Web Server » Turning Our Single-Threaded Server into a Multithreaded Server","id":"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server","title":"Turning Our Single-Threaded Server into a Multithreaded Server"},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Final Project: Building a Multithreaded Web Server » Graceful Shutdown and Cleanup","id":"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup","title":"Graceful Shutdown and Cleanup"},"foreword.html#foreword":{"body":"The 2018 edition of the book is no longer distributed with Rust's documentation. If you came here via a link or web search, you may want to check out the current version of the book instead. If you have an internet connection, you can find a copy distributed with Rust 1.30 .","breadcrumbs":"Foreword","id":"foreword.html#foreword","title":"Foreword"}},"docInfo":{"appendix-00.html#appendix":{"body":27,"breadcrumbs":1,"title":1},"appendix-01-keywords.html#appendix-a-keywords":{"body":27,"breadcrumbs":3,"title":2},"appendix-02-operators.html#appendix-b-operators-and-symbols":{"body":27,"breadcrumbs":5,"title":4},"appendix-03-derivable-traits.html#appendix-c-derivable-traits":{"body":27,"breadcrumbs":5,"title":4},"appendix-04-useful-development-tools.html#appendix-d---useful-development-tools":{"body":27,"breadcrumbs":6,"title":5},"appendix-05-editions.html#appendix-e---editions":{"body":27,"breadcrumbs":4,"title":3},"appendix-06-translation.html#appendix-f-translations-of-the-book":{"body":27,"breadcrumbs":5,"title":4},"appendix-07-nightly-rust.html#appendix-g---how-rust-is-made-and-nightly-rust":{"body":27,"breadcrumbs":7,"title":6},"ch00-00-introduction.html#introduction":{"body":27,"breadcrumbs":1,"title":1},"ch01-00-getting-started.html#getting-started":{"body":27,"breadcrumbs":2,"title":2},"ch01-01-installation.html#installation":{"body":27,"breadcrumbs":3,"title":1},"ch01-02-hello-world.html#hello-world":{"body":27,"breadcrumbs":4,"title":2},"ch01-03-hello-cargo.html#hello-cargo":{"body":27,"breadcrumbs":4,"title":2},"ch02-00-guessing-game-tutorial.html#programming-a-guessing-game":{"body":27,"breadcrumbs":3,"title":3},"ch03-00-common-programming-concepts.html#common-programming-concepts":{"body":27,"breadcrumbs":3,"title":3},"ch03-01-variables-and-mutability.html#variables-and-mutability":{"body":27,"breadcrumbs":5,"title":2},"ch03-02-data-types.html#data-types":{"body":27,"breadcrumbs":5,"title":2},"ch03-03-how-functions-work.html#functions":{"body":27,"breadcrumbs":4,"title":1},"ch03-04-comments.html#comments":{"body":27,"breadcrumbs":4,"title":1},"ch03-05-control-flow.html#control-flow":{"body":27,"breadcrumbs":5,"title":2},"ch04-00-understanding-ownership.html#understanding-ownership":{"body":27,"breadcrumbs":2,"title":2},"ch04-01-what-is-ownership.html#what-is-ownership":{"body":27,"breadcrumbs":3,"title":1},"ch04-02-references-and-borrowing.html#references-and-borrowing":{"body":27,"breadcrumbs":4,"title":2},"ch04-03-slices.html#the-slice-type":{"body":27,"breadcrumbs":4,"title":2},"ch05-00-structs.html#using-structs-to-structure-related-data":{"body":27,"breadcrumbs":5,"title":5},"ch05-01-defining-structs.html#defining-and-instantiating-structs":{"body":27,"breadcrumbs":8,"title":3},"ch05-02-example-structs.html#an-example-program-using-structs":{"body":27,"breadcrumbs":9,"title":4},"ch05-03-method-syntax.html#method-syntax":{"body":27,"breadcrumbs":7,"title":2},"ch06-00-enums.html#enums-and-pattern-matching":{"body":27,"breadcrumbs":3,"title":3},"ch06-01-defining-an-enum.html#defining-an-enum":{"body":27,"breadcrumbs":5,"title":2},"ch06-02-match.html#the--match--control-flow-operator":{"body":27,"breadcrumbs":7,"title":4},"ch06-03-if-let.html#concise-control-flow-with--if-let":{"body":27,"breadcrumbs":6,"title":3},"ch07-00-packages-crates-and-modules.html#packages-crates-and-modules":{"body":27,"breadcrumbs":3,"title":3},"ch07-01-packages-and-crates-for-making-libraries-and-executables.html#packages-and-crates-for-making-libraries-and-executables":{"body":27,"breadcrumbs":8,"title":5},"ch07-02-modules-and-use-to-control-scope-and-privacy.html#the-module-system-to-control-scope-and-privacy":{"body":27,"breadcrumbs":8,"title":5},"ch08-00-common-collections.html#common-collections":{"body":27,"breadcrumbs":2,"title":2},"ch08-01-vectors.html#storing-lists-of-values-with-vectors":{"body":27,"breadcrumbs":6,"title":4},"ch08-02-strings.html#storing-utf-8-encoded-text-with-strings":{"body":27,"breadcrumbs":8,"title":6},"ch08-03-hash-maps.html#storing-keys-with-associated-values-in-hash-maps":{"body":27,"breadcrumbs":8,"title":6},"ch09-00-error-handling.html#error-handling":{"body":27,"breadcrumbs":2,"title":2},"ch09-01-unrecoverable-errors-with-panic.html#unrecoverable-errors-with--panic":{"body":27,"breadcrumbs":5,"title":3},"ch09-02-recoverable-errors-with-result.html#recoverable-errors-with--result":{"body":27,"breadcrumbs":5,"title":3},"ch09-03-to-panic-or-not-to-panic.html#to--panic--or-not-to--panic":{"body":27,"breadcrumbs":4,"title":2},"ch10-00-generics.html#generic-types-traits-and-lifetimes":{"body":27,"breadcrumbs":4,"title":4},"ch10-01-syntax.html#generic-data-types":{"body":27,"breadcrumbs":7,"title":3},"ch10-02-traits.html#traits-defining-shared-behavior":{"body":27,"breadcrumbs":8,"title":4},"ch10-03-lifetime-syntax.html#validating-references-with-lifetimes":{"body":27,"breadcrumbs":7,"title":3},"ch11-00-testing.html#writing-automated-tests":{"body":27,"breadcrumbs":3,"title":3},"ch11-01-writing-tests.html#how-to-write-tests":{"body":27,"breadcrumbs":3,"title":2},"ch11-02-running-tests.html#controlling-how-tests-are-run":{"body":27,"breadcrumbs":4,"title":3},"ch11-03-test-organization.html#test-organization":{"body":27,"breadcrumbs":3,"title":2},"ch12-00-an-io-project.html#an-io-project-building-a-command-line-program":{"body":27,"breadcrumbs":6,"title":6},"ch12-01-accepting-command-line-arguments.html#accepting-command-line-arguments":{"body":27,"breadcrumbs":10,"title":4},"ch12-02-reading-a-file.html#reading-a-file":{"body":27,"breadcrumbs":8,"title":2},"ch12-03-improving-error-handling-and-modularity.html#refactoring-to-improve-modularity-and-error-handling":{"body":27,"breadcrumbs":11,"title":5},"ch12-04-testing-the-librarys-functionality.html#developing-the-librarys-functionality-with-test-driven-development":{"body":27,"breadcrumbs":12,"title":6},"ch12-05-working-with-environment-variables.html#working-with-environment-variables":{"body":27,"breadcrumbs":9,"title":3},"ch12-06-writing-to-stderr-instead-of-stdout.html#writing-error-messages-to-standard-error-instead-of-standard-output":{"body":27,"breadcrumbs":14,"title":8},"ch13-00-functional-features.html#functional-language-features-iterators-and-closures":{"body":27,"breadcrumbs":5,"title":5},"ch13-01-closures.html#closures-anonymous-functions-that-can-capture-their-environment":{"body":27,"breadcrumbs":10,"title":5},"ch13-02-iterators.html#processing-a-series-of-items-with-iterators":{"body":27,"breadcrumbs":9,"title":4},"ch13-03-improving-our-io-project.html#improving-our-io-project":{"body":27,"breadcrumbs":8,"title":3},"ch13-04-performance.html#comparing-performance-loops-vs-iterators":{"body":27,"breadcrumbs":10,"title":5},"ch14-00-more-about-cargo.html#more-about-cargo-and-cratesio":{"body":27,"breadcrumbs":3,"title":3},"ch14-01-release-profiles.html#customizing-builds-with-release-profiles":{"body":27,"breadcrumbs":7,"title":4},"ch14-02-publishing-to-crates-io.html#publishing-a-crate-to-cratesio":{"body":27,"breadcrumbs":6,"title":3},"ch14-03-cargo-workspaces.html#cargo-workspaces":{"body":27,"breadcrumbs":5,"title":2},"ch14-04-installing-binaries.html#installing-binaries-from-cratesio-with--cargo-install":{"body":27,"breadcrumbs":8,"title":5},"ch14-05-extending-cargo.html#extending-cargo-with-custom-commands":{"body":27,"breadcrumbs":7,"title":4},"ch15-00-smart-pointers.html#smart-pointers":{"body":27,"breadcrumbs":2,"title":2},"ch15-01-box.html#using--boxt--to-point-to-data-on-the-heap":{"body":27,"breadcrumbs":7,"title":5},"ch15-02-deref.html#treating-smart-pointers-like-regular-references-with-the--deref--trait":{"body":27,"breadcrumbs":9,"title":7},"ch15-03-drop.html#running-code-on-cleanup-with-the--drop--trait":{"body":27,"breadcrumbs":7,"title":5},"ch15-04-rc.html#rct--the-reference-counted-smart-pointer":{"body":27,"breadcrumbs":7,"title":5},"ch15-05-interior-mutability.html#refcellt--and-the-interior-mutability-pattern":{"body":27,"breadcrumbs":6,"title":4},"ch15-06-reference-cycles.html#reference-cycles-can-leak-memory":{"body":27,"breadcrumbs":6,"title":4},"ch16-00-concurrency.html#fearless-concurrency":{"body":27,"breadcrumbs":2,"title":2},"ch16-01-threads.html#using-threads-to-run-code-simultaneously":{"body":27,"breadcrumbs":7,"title":5},"ch16-02-message-passing.html#using-message-passing-to-transfer-data-between-threads":{"body":27,"breadcrumbs":9,"title":7},"ch16-03-shared-state.html#shared-state-concurrency":{"body":27,"breadcrumbs":5,"title":3},"ch16-04-extensible-concurrency-sync-and-send.html#extensible-concurrency-with-the--sync--and--send--traits":{"body":27,"breadcrumbs":7,"title":5},"ch17-00-oop.html#object-oriented-programming-features-of-rust":{"body":27,"breadcrumbs":5,"title":5},"ch17-01-what-is-oo.html#characteristics-of-object-oriented-languages":{"body":27,"breadcrumbs":9,"title":4},"ch17-02-trait-objects.html#using-trait-objects-that-allow-for-values-of-different-types":{"body":27,"breadcrumbs":12,"title":7},"ch17-03-oo-design-patterns.html#implementing-an-object-oriented-design-pattern":{"body":27,"breadcrumbs":10,"title":5},"ch18-00-patterns.html#patterns-and-matching":{"body":27,"breadcrumbs":2,"title":2},"ch18-01-all-the-places-for-patterns.html#all-the-places-patterns-can-be-used":{"body":27,"breadcrumbs":7,"title":3},"ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match":{"body":27,"breadcrumbs":9,"title":5},"ch18-03-pattern-syntax.html#pattern-syntax":{"body":27,"breadcrumbs":6,"title":2},"ch19-00-advanced-features.html#advanced-features":{"body":27,"breadcrumbs":2,"title":2},"ch19-01-unsafe-rust.html#unsafe-rust":{"body":27,"breadcrumbs":4,"title":2},"ch19-02-advanced-lifetimes.html#advanced-lifetimes":{"body":27,"breadcrumbs":4,"title":2},"ch19-03-advanced-traits.html#advanced-traits":{"body":27,"breadcrumbs":4,"title":2},"ch19-04-advanced-types.html#advanced-types":{"body":27,"breadcrumbs":4,"title":2},"ch19-05-advanced-functions-and-closures.html#advanced-functions-and-closures":{"body":27,"breadcrumbs":5,"title":3},"ch19-06-macros.html#macros":{"body":27,"breadcrumbs":3,"title":1},"ch20-00-final-project-a-web-server.html#final-project-building-a-multithreaded-web-server":{"body":27,"breadcrumbs":6,"title":6},"ch20-01-single-threaded.html#building-a-single-threaded-web-server":{"body":27,"breadcrumbs":11,"title":5},"ch20-02-multithreaded.html#turning-our-single-threaded-server-into-a-multithreaded-server":{"body":27,"breadcrumbs":12,"title":6},"ch20-03-graceful-shutdown-and-cleanup.html#graceful-shutdown-and-cleanup":{"body":27,"breadcrumbs":9,"title":3},"foreword.html#foreword":{"body":27,"breadcrumbs":1,"title":1}},"length":101}}};